# Generated by Django 3.1.1 on 2020-11-13 15:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('neighborhood', models.CharField(max_length=200)),
                ('number', models.CharField(blank=True, max_length=20, null=True)),
                ('complement', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Carrear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('position_region_ranking', models.IntegerField(blank=True)),
                ('position_ranking', models.IntegerField(blank=True)),
                ('points_general', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DaysUsing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_Level', models.CharField(choices=[('M', 'Master'), ('H', 'High School'), ('P', 'Phd'), ('D', 'Degree'), ('T', 'Technical'), ('F', 'Fundamental')], max_length=1)),
                ('education', models.CharField(blank=True, max_length=200, null=True)),
                ('mastery_area', models.CharField(blank=True, max_length=200, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=200, null=True)),
                ('latters', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='src.address')),
                ('carrear', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='src.carrear')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StandardUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_pic', models.ImageField(blank=True, default='profile1.png', null=True, upload_to='')),
                ('nickname', models.CharField(blank=True, max_length=200, null=True)),
                ('firstname', models.CharField(blank=True, max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, max_length=200, null=True)),
                ('birth', models.CharField(blank=True, max_length=8, null=True)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('telegram', models.CharField(blank=True, max_length=200, null=True)),
                ('about_me', models.CharField(blank=True, max_length=5000, null=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='src.address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('type_permission', models.CharField(max_length=1)),
                ('standard_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='src.standarduser')),
            ],
        ),
        migrations.CreateModel(
            name='Silver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Silver', max_length=6)),
                ('contents', models.ManyToManyField(to='src.Content')),
                ('mentors', models.ManyToManyField(to='src.Mentor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SalesVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PerseveranceVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkingVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KnowledgeVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Gold', max_length=4)),
                ('contents', models.ManyToManyField(to='src.Content')),
                ('mentors', models.ManyToManyField(to='src.Mentor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FocusVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EthicsVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EngagementVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='content',
            name='pages',
            field=models.ManyToManyField(to='src.Page'),
        ),
        migrations.CreateModel(
            name='CommunicationVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commentary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('text', models.CharField(max_length=500)),
                ('is_public', models.BooleanField(default=False)),
                ('standard_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.standarduser')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='src.state')),
            ],
        ),
        migrations.CreateModel(
            name='CharismVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='carrear',
            name='days_working',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.daysusing'),
        ),
        migrations.CreateModel(
            name='BusinessStrategyVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('mentor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.mentor')),
                ('user_permission_poster', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='src.userpermission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bronze',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Bronze', max_length=6)),
                ('contents', models.ManyToManyField(to='src.Content')),
                ('mentors', models.ManyToManyField(to='src.Mentor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='src.city'),
        ),
        migrations.AddField(
            model_name='address',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='src.region'),
        ),
        migrations.CreateModel(
            name='UserPermissionCommentary',
            fields=[
                ('userpermission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='src.userpermission')),
                ('commentary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.commentary')),
            ],
            bases=('src.userpermission',),
        ),
    ]
